import { ProjectSection } from "@/type/ProjerctSection-type";

export const WooSeokBotDetails: ProjectSection[] = [
  {
    title: "메인화면 애니메이션 효과",
    video: {
      src: "/wooseokbot_home.mp4",
      poster: "/dogolist.webp",
      type: "mp4",
    },
    items: [
      {
        title: "Framer Motion 기반 텍스트 애니메이션",
        content:
          "홈 화면에서는 WooSeokBot이라는 텍스트가 나타나는 구조로, Framer Motion의 motion.span과 custom variant를 사용해 'k' 글자에만 올라갔다가 회전하며 내려오는 애니메이션을 적용했습니다. 이 애니메이션은 시차 기반 타이밍 제어(times 배열)를 통해 사용자에게 주목성 있는 첫인상을 제공합니다.",
      },
      {
        title: "자동 재생 영상 데모 구성",
        content:
          "위 애니메이션은 MP4 영상으로도 별도로 렌더링되며, 정적 파일로 배치하여 페이지 로딩 시 자동 재생 및 무한 반복되도록 구성했습니다. autoPlay, muted, loop, playsInline 속성을 통해 인터랙션 없이도 동작하도록 구성하여, 포트폴리오에서 즉시 시연 가능한 상태로 만들었습니다.",
      },
      {
        title: "실시간 한국 시간 표시",
        content:
          "챗봇 카드 상단에 현재 한국 시간(KST)을 실시간으로 표시하는 기능을 구현했습니다. Date 객체와 timeZone 옵션을 활용해 Asia/Seoul 기준의 시간을 계산하고, 매분 정확히 갱신되도록 millisecond 보정 기반의 setTimeout 타이머를 사용했습니다. 이를 통해 사용자에게 정교한 시각 정보를 제공됩니다.",
      },
    ],
  },
  {
    title: "테마 모드 (다크/라이트)",
    video: {
      src: "/wooseokbot_theme.mp4",
      poster: "/dogolist.webp",
      type: "mp4",
    },
    items: [
      {
        title: "전역 테마 상태 관리 및 자연스러운 전환",
        content:
          "next-themes를 이용해 전역 테마 상태를 관리하고, 시스템 설정 또는 사용자 선택에 따라 다크/라이트 모드가 적용됩니다. 테마 전환 시에는 색상, 텍스트, 배경이 자연스럽게 애니메이션되며 UI 전체에 일관되게 반영됩니다.",
      },
      {
        title: "테마 전환 UI 및 시각 효과 최적화",
        content:
          "토글 버튼 디자인은 사용자에게 직관적인 경험을 제공하며, 각 테마에 맞는 색상 대비와 명도 설정을 통해 가독성과 시각적 완성도를 높였습니다.",
      },
      {
        title: "실시간 한국 시간 표시",
        content:
          "챗봇 카드 상단에 현재 한국 시간(분 단위)을 실시간으로 표시해 사용자에게 시각적 타이밍 정보를 제공하며, 시간 변화는 자동 갱신되어 반응형 디자인 흐름과도 잘 어우러집니다.",
      },
    ],
  },
  {
    title: "메인 챗봇 시스템",
    images: [
      { src: "/wooseokbot_main_chatting.webp", alt: "메인 챗봇" },
      { src: "/wooseokbot_main_chatting2.webp", alt: "메인 챗봇 응답" },
    ],
    items: [
      {
        title: "지원자 프로필 + 프로젝트 전반 질의 응답",
        content:
          "지원자의 전체 경력과 프로젝트 데이터에 기반해 어떤 질문이든 대응 가능한 범용 챗봇을 구현했습니다. 특정 프로젝트에 대한 질문이 들어올 경우 slug 기반으로 해당 프로젝트 정보를 찾아 응답하며, 일반적인 질문에는 OpenAI가 의미 기반으로 가장 적절한 항목을 자동 매칭합니다.",
      },
      {
        title: "대화 흐름 저장 및 후속 질문 처리",
        content:
          "ChatSession 모델에 각 사용자의 질문과 응답을 순차적으로 저장하며, token을 기준으로 세션을 구분합니다. 후속 질문 시 서버는 해당 토큰으로 직전 대화 최대 5개를 조회하여, 이를 OpenAI의 messages 컨텍스트 배열에 포함시킵니다. 이를 통해 사용자는 이전 대화 맥락을 유지한 채 자연스럽게 대화를 이어갈 수 있으며, 단일 질문이 아닌 연속된 질의 흐름을 구현할 수 있습니다.",
      },
      {
        title: "비동기 응답 처리 및 응답 지연 UX 완화",
        content:
          "OpenAI 응답 지연 시간 동안 사용자에게 시각적 피드백을 제공하기 위해 LoadingDots 컴포넌트를 사용했습니다. 세 개의 점(.)이 순차적으로 깜빡이는 CSS 애니메이션으로 구성되어 있으며, 답변 생성 상태를 직관적으로 나타냅니다. 해당 컴포넌트는 실제 답변으로 교체되기 전까지 출력되어 사용자에게 로딩 상황을 명확히 전달합니다.",
      },
    ],
  },
  {
    title: "피드백 모달",
    images: [{ src: "/wooseokbot_feedback.webp", alt: "피드백 작성 모달" }],
    items: [
      {
        title: "비회원 피드백 작성 기능",
        content:
          "회원가입 없이 닉네임과 패스워드만 입력해 피드백을 등록할 수 있도록 구현했습니다. 이는 포트폴리오 목적상 사용자 접근성을 높이기 위함이며, 비회원 작성 정보는 내부적으로 패스워드 해시 및 UUID 기반으로 식별됩니다.",
      },
      {
        title: "좋아요/싫어요 상태 선택 기능",
        content:
          "피드백 등록 시 like, dislike 중 하나의 상태를 선택하거나 또는 선택하지 않을시 none으로 상태가 설정되며, 이는 감정 기반의 반응 데이터를 수집하기 위해 도입되었습니다. 선택 상태는 별도 컬럼으로 저장됩니다.",
      },
      {
        title: "클라이언트-서버 연동 구조",
        content:
          "Next.js App Router 기반 프론트엔드에서 피드백 입력을 받아 JSON 형태로 Django REST Framework API로 전송하며, POST 요청을 통해 ChatFeedback 모델에 데이터를 저장합니다. 백엔드는 PostgreSQL을 사용하여 실제 운영 DB와 동일한 구조로 설계되었고, 유효성 검증은 ChatFeedbackSerializer를 통해 처리됩니다.",
      },
      {
        title: "관리자 전용 피드백 열람 제한",
        content:
          "등록된 피드백은 일반 사용자에게는 비공개이며, 관리자 페이지에서만 확인 가능하도록 구성되었습니다. Django Admin을 통해 실시간 확인이 가능하고, 데이터는 PostgreSQL 기반 DB에 안전하게 저장됩니다.",
      },
    ],
  },
  {
    title: "프로젝트 전용 챗봇",
    images: [
      { src: "/wooseokbot_chatting_L.webp", alt: "프로젝트 전용 채팅 왼쪽" },
      { src: "/wooseokbot_chatting_R.webp", alt: "프로젝트 전용 채팅 오른쪽" },
    ],
    items: [
      {
        title: "슬러그 기반 프로젝트 매칭",
        content:
          "페이지 URL의 마지막 경로(`/project/:slug`)를 기준으로 해당 프로젝트를 자동 추적하여, 각 프로젝트별 고유한 챗봇 대화 흐름을 제공했습니다. 프론트에서는 usePathname()으로 slug를 파싱하고, 백엔드에서는 DB에 저장된 slug 정보와 매칭해 정확한 컨텍스트 대화를 유도합니다.",
      },
      {
        title: "드래그 가능한 위치 지정 UI",
        content:
          "챗봇 카드는 react-draggable을 활용해 사용자가 직접 위치를 이동시킬 수 있게 했으며, 좌/우 측 중 놓은 위치에 따라 챗봇 창이 해당 방향으로 열리도록 UX를 설계했습니다. 이는 사용자의 화면 크기나 멀티 모니터 사용 환경까지 고려한 접근입니다.",
      },
      {
        title: "프로젝트 외 접근 차단 및 안내",
        content:
          "챗봇 기능은 특정 프로젝트 상세 페이지에서만 활성화되며, 그 외 페이지에서는 버튼 비활성화 + 툴팁 안내 처리로 사용 흐름을 유도했습니다.",
      },
    ],
  },
  {
    title: "프로젝트 슬라이더",
    images: [
      { src: "/wooseokbot_slider.webp", alt: "전체 프로젝트 슬라이더" },
      { src: "/wooseokbot_slider2.webp", alt: "특정 프로젝트 제외 슬라이더" },
    ],
    items: [
      {
        title: "자동 슬라이드 & 사용자 제어 동시 지원",
        content:
          "useAutoSliderController 커스텀 훅을 만들어 프로젝트 카드 영역을 일정 시간 간격으로 자동 슬라이딩되도록 구성했습니다. 슬라이드는 scrollTo API를 활용해 부드러운 이동을 지원하며, 마우스를 올리면 자동 슬라이드가 일시 정지되어 사용자가 수동 조작하기 쉽도록 구현했습니다.",
      },
      {
        title: "슬라이드 방향 버튼으로 수동 이동 가능",
        content:
          "좌우 화살표 버튼 클릭 시 지정된 카드 단위로 수동 이동할 수 있으며, 내부적으로 scrollBy 메서드를 사용해 방향에 따라 스크롤을 자연스럽게 제어합니다.",
      },
      {
        title: "중복 카드 렌더링으로 무한 슬라이드 UX 구현",
        content:
          "슬라이더 내부 카드 목록을 `[...filteredProjects, ...filteredProjects]` 형식으로 두 번 렌더링하여, 리스트 끝에 도달했을 때 처음으로 자연스럽게 돌아갈 수 있는 무한 루프형 UX를 제공합니다.",
      },
      {
        title: "현재 프로젝트는 슬라이더에서 제외",
        content:
          "상세 페이지에서 슬라이더를 보여줄 때는 excludeId를 기준으로 현재 보고 있는 프로젝트를 필터링하여 제외 처리했습니다. 이를 통해 사용자는 본인이 이미 보고 있는 프로젝트를 다시 보지 않고 다른 프로젝트만 탐색할 수 있습니다.",
      },
    ],
  },
  {
    title: "LLM",
    images: [{ src: "/wooseokbot_openai.webp", alt: "공식사이트 오픈Ai 비교" }],
    items: [
      {
        title: "왜 GPT-4.1 나노인가?",
        content:
          "GPT 3.5 터보 대신 GPT-4.1-Nano를 선택한 이유는 압도적으로 저렴한 가격과 빠른 속도 덕분입니다. 많은 분들이 3.5 터보가 가장 저렴하다고 알고 계시지만, 실제 사용 요금 기준으로는 나노가 더 합리적일 수 있다는 점이 잘 알려지지 않아 아쉽습니다.",
      },
      {
        title: "왜 OpenAI를 선택했는가?",
        content:
          "다양한 LLM 제공사 중 OpenAI를 선택한 이유는 한국어 처리 능력과 전반적인 자연어 이해력에서 가장 뛰어난 성능을 보였기 때문입니다. 또한 속도와 가격 면에서도 매우 합리적인 선택이었습니다.",
      },
      {
        title: "LangChain을 사용하지 않은 이유",
        content:
          "단일 프롬프트 기반으로 동작하고, 프로젝트는 문서 형태로 DB에 저장하는 구조이기 때문에 LangChain과 같은 체인 프레임워크는 과한 선택이라고 판단했습니다. 복잡한 체인 구성이나 멀티 프롬프트 흐름이 필요한 상황이 아니라면, 직접 구현이 더 간단하고 효율적입니다.",
      },
    ],
  },
  {
    title: "단일 프롬프트 및 DB 관리",
    images: [
      {
        src: "/wooseokbot_postgresql.webp",
        alt: "PostgreSQL DB(Django UI) 이미지",
      },
    ],
    items: [
      {
        title: "왜 단일 프롬프트인가?",
        content:
          "챗봇의 목적은 사용자 질문에 자연스럽고 유연하게 대응하는 것이었습니다. 깔끔한 하나의 질문이 아닌, 여러 개념이 섞인 복합 질문이 들어올 것을 전제로 했기 때문에, 여러 개의 프롬프트 체인보다는 하나의 단일 프롬프트로 모든 데이터를 포괄해서 처리하는 구조가 더 적합하다고 판단했습니다. 자연어 처리 관점에서도 이 방식이 더 직관적이었습니다.",
      },
      {
        title: "DB에 서술형으로 데이터를 담은 이유",
        content:
          "이 챗봇은 단순한 지식 응답이 아닌, '문서 기반 대화'를 목표로 했기 때문에 DB에는 데이터를 정형화된 필드가 아닌 서술형 문서 형태로 담았습니다.\n\n예를 들어, 프로젝트 하나를 저장할 때도 단순히 개요/기간/기술스택 같은 구조화된 항목으로 나누지 않고, 아래와 같이 하나의 흐름 있는 텍스트로 저장했습니다:\n\n- 프로젝트 개요 및 기획 배경\n- 팀 구성과 각자의 역할\n- 본인이 구현한 기능 상세 (검색, 예약, 필터 등)\n- 기술 선택 이유\n- 협업 중 겪은 갈등과 해결 과정\n- 사용자의 실제 경험(가장 좋았던 호텔 등)\n\n이렇게 문서화한 이유는, 단일 프롬프트 전략과 밀접하게 연관됩니다. 사용자는 대부분 '정형화된 질문'이 아닌, '자연스러운 대화체 질문'을 하기 때문입니다. 예를 들어, '이 프로젝트에서 뭐 했는지 알려줘' 같은 질문엔 여러 항목이 묻혀 있을 수 있고, '왜 그렇게 했어?' 같은 후속 질문도 자연스럽게 이어질 수 있습니다.\n\n따라서 LLM이 해당 문서를 통째로 참조하고 질문의 의도에 따라 유동적으로 필요한 정보를 추출할 수 있게 설계했습니다. 여러 개의 프롬프트 체인으로 분리해서 답변하게 하기보단, 하나의 프롬프트로 모든 정보를 열람하며 문맥에 맞는 응답을 구성하는 것이 훨씬 자연스럽고 효율적이었습니다.\n\n결론적으로, 서술형 문서 기반 DB 구조는 단일 프롬프트 전략의 전제 조건이었고, 실제로 복합 질문, 맥락 흐름 유지, 요약 또는 특정 정보 추출 등 다양한 요구사항에 안정적으로 대응하고 있습니다.",
      },
      {
        title: "백엔드 PostgreSQL DB + 프론트 하드코딩 혼용",
        content:
          "프론트엔드는 기존 포트폴리오 페이지를 일부 그대로 활용해야 했고, 빠른 구현 속도가 요구되었습니다. 따라서 프로젝트 관련 데이터를 프론트에서 하드코딩한 반면, 백엔드에서는 PostgreSQL을 통해 전체 데이터를 통합 저장하고, 챗봇이 참조할 수 있도록 구성했습니다. 즉, 사용자가 프론트에서 확인 가능한 정보 외에도, 챗봇은 백엔드 DB의 전체 데이터를 기반으로 더욱 풍부한 답변을 제공할 수 있도록 설계했습니다.",
      },
    ],
  },
  {
    title: "핸들링 고도화",
    images: [{ src: "/dogomap.webp", alt: "카카오 지도 정보" }],
    items: [
      {
        title: "Kakao Map 연동",
        content:
          "국내 주소/도로명/지번 등에서 정확한 정보를 제공하는 Kakao Map을 사용하여 위치 신뢰도를 높였습니다.",
      },
    ],
  },
];
